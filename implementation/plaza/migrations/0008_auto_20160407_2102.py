# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-04-07 21:02
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('plaza', '0007_auto_20160405_1527'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('text', models.CharField(max_length=128)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('0', 'unseen'), ('1', 'seen')], default='0', max_length=1)),
                ('destination', models.URLField(max_length=300)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plaza.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Objects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('category', models.CharField(choices=[('PDF', 'application/pdf'), ('JPEG', 'image/jpeg'), ('GIF', 'image/gif'), ('MP4', 'video/mp4'), ('EMBED', 'text/html'), ('PNG', 'image/png'), ('CAL', 'text/calendar')], default='0', max_length=10)),
            ],
        ),
        migrations.RemoveField(
            model_name='comment',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='original_post',
        ),
        migrations.RemoveField(
            model_name='tweet',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='following',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='user',
        ),
        migrations.RenameField(
            model_name='post',
            old_name='header',
            new_name='title',
        ),
        migrations.RenameField(
            model_name='post',
            old_name='timestamp',
            new_name='updated_at',
        ),
        migrations.AddField(
            model_name='person',
            name='date_of_birth',
            field=models.DateField(default=datetime.datetime(2016, 4, 7, 21, 2, 11, 189347, tzinfo=utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='post',
            name='assignees',
            field=models.ManyToManyField(related_name='assigned_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2016, 4, 7, 21, 2, 22, 757322, tzinfo=utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='post',
            name='editors',
            field=models.ManyToManyField(related_name='edited_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='followers',
            field=models.ManyToManyField(related_name='followed_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='pinned',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='post',
            name='readers',
            field=models.ManyToManyField(related_name='read_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='status',
            field=models.CharField(choices=[('0', 'question'), ('1', 'student_reply'), ('2', 'staff_reply'), ('3', 'comments')], default='0', max_length=1),
        ),
        migrations.AddField(
            model_name='post',
            name='types',
            field=models.CharField(choices=[('0', 'question'), ('1', 'student_reply'), ('2', 'staff_reply'), ('3', 'comments')], default='0', max_length=1),
        ),
        migrations.AlterField(
            model_name='assignment',
            name='end_time',
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name='assignment',
            name='start_time',
            field=models.DateTimeField(null=True),
        ),
        migrations.DeleteModel(
            name='Comment',
        ),
        migrations.DeleteModel(
            name='Tweet',
        ),
        migrations.DeleteModel(
            name='UserProfile',
        ),
        migrations.AddField(
            model_name='objects',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploads', to='plaza.Person'),
        ),
        migrations.AddField(
            model_name='objects',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objects', to='plaza.Post'),
        ),
        migrations.AddField(
            model_name='notification',
            name='receivers',
            field=models.ManyToManyField(related_name='notifications_received', to='plaza.Person'),
        ),
        migrations.AddField(
            model_name='notification',
            name='sender',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_sent', to='plaza.Person'),
        ),
    ]
